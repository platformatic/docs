"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[3947,1751],{1364:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>j,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=s(4848),r=s(8453),t=s(7130);const o={},c="Configuration",a={id:"db/configuration",title:"Configuration",description:"Platformatic DB can be configured with a configuration file in the different file formats below. The DB also support the use of environment variables as setting values with environment variable placeholders.",source:"@site/versioned_docs/version-1.53.3/db/configuration.md",sourceDirName:"db",slug:"/db/configuration",permalink:"/docs/db/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/oss/edit/main/versioned_docs/version-1.53.3/db/configuration.md",tags:[],version:"1.53.3",frontMatter:{},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/db/overview"},next:{title:"Migrations",permalink:"/docs/db/migrations"}},l={},d=[{value:"Configuration Files",id:"configuration-files",level:2},{value:"Supported File Formats",id:"supported-file-formats",level:2},{value:"Configuration Settings",id:"configuration-settings",level:2},{value:"<code>db</code>",id:"db",level:3},{value:"<code>migrations</code>",id:"migrations",level:3},{value:"<code>authorization</code>",id:"authorization",level:3},{value:"Example",id:"example",level:4},{value:"Setting and Using ENV placeholders",id:"setting-and-using-env-placeholders",level:2},{value:"PLT_ROOT",id:"plt_root",level:3},{value:"Sample Configuration",id:"sample-configuration",level:2},...t.toc];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,i.jsxs)(n.p,{children:["Platformatic DB can be configured with a ",(0,i.jsx)(n.a,{href:"#configuration-file",children:"configuration file"})," in the different file formats below. The DB also support the use of environment variables as setting values with ",(0,i.jsx)(n.a,{href:"#environment-variable-placeholders",children:"environment variable placeholders"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,i.jsxs)(n.p,{children:["The Platformatic CLI will automatically detect and load configuration files found in the current working directory with the file names listed ",(0,i.jsx)(n.a,{href:"/docs/file-formats#configuration-files",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Alternatively, a ",(0,i.jsxs)(n.a,{href:"/docs/cli#db",children:[(0,i.jsx)(n.code,{children:"--config"})," option"]})," specify a configuration file path for most platformatic db CLI commands. The configuration examples in this reference use the JSON format."]}),"\n",(0,i.jsx)(n.h2,{id:"supported-file-formats",children:"Supported File Formats"}),"\n",(0,i.jsxs)(n.p,{children:["For detailed information on supported file formats and extensions, please visit our ",(0,i.jsx)(n.a,{href:"/docs/file-formats#supported-file-formats",children:"Supported File Formats and Extensions"})," page."]}),"\n",(0,i.jsx)(n.h2,{id:"configuration-settings",children:"Configuration Settings"}),"\n",(0,i.jsx)(n.p,{children:"Configuration file settings are grouped as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"server"})})," ",(0,i.jsx)(n.strong,{children:"(required)"}),": Configures the ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#server",children:"server settings"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"composer"})}),": Specific settings for Platformatic Composer, such as service management and API composition."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"metrics"})}),": Monitors and records performance ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#metrics",children:"metrics"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"plugins"})}),": Manages additional functionality through ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#plugins",children:"plugins"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"telemetry"})}),": Handles ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#telemetry",children:"telemetry data reporting"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"watch"})}),": Observes file changes for ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#watch",children:"dynamic updates"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"clients"})}),": Configures ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#clients",children:"client-specific"})," settings."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Sensitive data within these settings should use ",(0,i.jsx)(n.a,{href:"#configuration-placeholders",children:"configuration placeholders"})," to ensure security."]}),"\n",(0,i.jsx)(n.h3,{id:"db",children:(0,i.jsx)(n.code,{children:"db"})}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.strong,{children:"required"})," object with the following settings:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"connectionString"})})," (",(0,i.jsx)(n.strong,{children:"required"}),", ",(0,i.jsx)(n.code,{children:"string"}),") \u2014 Specifies the URL for database connection."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example"',children:"postgres://user:password@my-database:5432/db-name\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"schema"})})," (array of ",(0,i.jsx)(n.code,{children:"string"}),") - Defines the database schemas, only supported for PostgreSQL. Defaults to 'public' if unspecified."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'  "db": {\n    "connectionString": "(...)",\n    "schema": [\n      "schema1", "schema2"\n    ],\n    ...\n\n  },\n\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Platformatic DB supports MySQL, MariaDB, PostgreSQL and SQLite."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"graphql"})})," (",(0,i.jsx)(n.code,{children:"boolean"})," or ",(0,i.jsx)(n.code,{children:"object"}),", default: ",(0,i.jsx)(n.code,{children:"true"}),") \u2014 Controls the GraphQL API interface, with optional GraphQL API interface."]}),"\n",(0,i.jsx)(n.p,{children:"Enables GraphQL support"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "db": {\n    ...\n    "graphql": true\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Enables GraphQL support with the ",(0,i.jsx)(n.code,{children:"enabled"})," option"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "db": {\n    ...\n    "graphql": {\n      ...\n      "enabled": true\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Enables GraphQL support with GraphiQL"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "db": {\n    ...\n    "graphql": {\n      "graphiql": true\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"It's possible to selectively ignore entities:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "db": {\n    ...\n    "graphql": {\n      "ignore": {\n        "categories": true\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"It's possible to selectively ignore fields:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "db": {\n    ...\n    "graphql": {\n      "ignore": {\n        "categories": {\n          "name": true\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"It's possible to add a custom GraphQL schema during the startup:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "db": {\n    ...\n    "graphql": {\n      "schemaPath": "path/to/schema.graphql"\n      }\n    }\n  }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"openapi"})})," (",(0,i.jsx)(n.code,{children:"boolean"})," or ",(0,i.jsx)(n.code,{children:"object"}),", default: ",(0,i.jsx)(n.code,{children:"true"}),") \u2014 Enables OpenAPI REST support."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If value is an object, all ",(0,i.jsx)(n.a,{href:"https://swagger.io/specification/",children:"OpenAPI v3"})," allowed properties can be passed. Also a ",(0,i.jsx)(n.code,{children:"prefix"})," property can be passed to set the OpenAPI prefix."]}),"\n",(0,i.jsxs)(n.li,{children:["Platformatic DB uses ",(0,i.jsx)(n.a,{href:"https://github.com/fastify/fastify-swagger",children:(0,i.jsx)(n.code,{children:"@fastify/swagger"})})," under the hood to manage this configuration."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Enables OpenAPI"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "openapi": true\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Enables OpenAPI using the ",(0,i.jsx)(n.code,{children:"enabled"})," option"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "openapi": {\n      ...\n      "enabled": true\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Enables OpenAPI with prefix"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "openapi": {\n      "prefix": "/api"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Enables OpenAPI with options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "openapi": {\n      "info": {\n        "title": "Platformatic DB",\n        "description": "Exposing a SQL database as REST"\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You can for example add the ",(0,i.jsx)(n.code,{children:"security"})," section, so that Swagger will allow you to add the authentication header to your requests.\nWe're adding a Bearer token in the form of a ",(0,i.jsx)(n.a,{href:"/reference/db/authorization/strategies.md#json-web-token-jwt",children:"JWT"})," in the code block below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "openapi": {\n      ...\n      "security": [{ "bearerAuth": [] }],\n      "components": {\n        "securitySchemes": {\n          "bearerAuth": {\n            "type": "http",\n            "scheme": "bearer",\n            "bearerFormat": "JWT"\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can selectively ignore entities:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "openapi": {\n      "ignore": {\n        "categories": true\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Selectively ignore fields:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "openapi": {\n      "ignore": {\n        "categories": {\n          "name": true\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You can explicitly identify tables to build an entity, ",(0,i.jsx)(n.strong,{children:"however all other tables will be ignored"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "openapi": {\n      "include": {\n        "categories": true\n      }\n    }\n  }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"autoTimestamp"})})," (",(0,i.jsx)(n.code,{children:"boolean"})," or ",(0,i.jsx)(n.code,{children:"object"}),") - Generate timestamp automatically when inserting/updating records."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"allowPrimaryKeysInInput"})})," (",(0,i.jsx)(n.code,{children:"boolean"}),") - Allow the user to set the primary keys when creating new entities."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"poolSize"})})," (",(0,i.jsx)(n.code,{children:"number"}),", default: ",(0,i.jsx)(n.code,{children:"10"}),") \u2014 Maximum number of connections in the connection pool."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"idleTimeoutMilliseconds"})})," (",(0,i.jsx)(n.code,{children:"number"}),", default: ",(0,i.jsx)(n.code,{children:"30000"}),") - Max milliseconds a client can go unused before it is removed from the pool and destroyed."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"queueTimeoutMilliseconds"})})," (",(0,i.jsx)(n.code,{children:"number"}),", default: ",(0,i.jsx)(n.code,{children:"60000"}),") - Number of milliseconds to wait for a connection from the connection pool before throwing a timeout error."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"acquireLockTimeoutMilliseconds"})})," (",(0,i.jsx)(n.code,{children:"number"}),", default: ",(0,i.jsx)(n.code,{children:"60000"}),") - Number of milliseconds to wait for a lock on a connection/transaction."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"limit"})})," (",(0,i.jsx)(n.code,{children:"object"}),") - Set the default and max limit for pagination. Default is 10, max is 1000."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "limit": {\n      "default": 10,\n      "max": 1000\n    }\n  }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ignore"})})," (",(0,i.jsx)(n.code,{children:"object"}),") \u2014 Key/value object that defines which database tables should not be mapped as API entities."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "ignore": {\n      "versions": true // "versions" table will be not mapped with GraphQL/REST APIs\n    }\n  }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"include"})})," (",(0,i.jsx)(n.code,{children:"object"}),") \u2014 Key/value object that defines which entities should be exposed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "include": {\n      "version": true\n    }\n  }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"events"})})," (",(0,i.jsx)(n.code,{children:"boolean"})," or ",(0,i.jsx)(n.code,{children:"object"}),", default: ",(0,i.jsx)(n.code,{children:"true"}),") \u2014 Controls the support for events published by the SQL mapping layer."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled"}),": Set to ",(0,i.jsx)(n.code,{children:"true"})," to activate event publishing, which  support for GraphQL Subscription over WebSocket using an in-process message broker."]}),"\n",(0,i.jsx)(n.li,{children:"Custom Broker: To use an external message broker, such as Redis, provide the connection string as shown in the example below."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "events": {\n      ...\n      "enabled": true,\n       "connectionString": "redis://:password@redishost.com:6380/"\n    }\n  }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"schemalock"})})," (",(0,i.jsx)(n.code,{children:"boolean"})," or ",(0,i.jsx)(n.code,{children:"object"}),", default: ",(0,i.jsx)(n.code,{children:"false"}),") \u2014 Controls the caching of the database schema on disk.\nEnabling this feature (",(0,i.jsx)(n.code,{children:"true"}),") saves the database schema metadata in a ",(0,i.jsx)(n.code,{children:"schema.lock"})," file, ensuring faster startup times and consistent schema enforcement across sessions. You can also customize the storage location of the ",(0,i.jsx)(n.code,{children:"schema.lock"})," file by providing a specific file path:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="Example Object"',children:'{\n  "db": {\n    ...\n    "schemalock": {\n      "path": "./dbmetadata"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Starting Platformatic DB or running a migration will automatically create the schemalock file."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"migrations",children:(0,i.jsx)(n.code,{children:"migrations"})}),"\n",(0,i.jsxs)(n.p,{children:["Configures ",(0,i.jsx)(n.a,{href:"https://github.com/rickbergfalk/postgrator",children:"Postgrator"})," to run migrations against the database."]}),"\n",(0,i.jsx)(n.p,{children:"An optional object with the following settings:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dir"})})," (",(0,i.jsx)(n.strong,{children:"required"}),", ",(0,i.jsx)(n.code,{children:"string"}),"): Relative path to the migrations directory."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"autoApply"})})," (",(0,i.jsx)(n.code,{children:"boolean"}),", default: ",(0,i.jsx)(n.code,{children:"false"}),"): Automatically apply migrations when Platformatic DB server starts."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"table"})})," (",(0,i.jsx)(n.code,{children:"string"}),", default: ",(0,i.jsx)(n.code,{children:"versions"}),"): Table created to track schema version"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"validateChecksums"})})," (",(0,i.jsx)(n.code,{children:"boolean"}),"): Validates checksum of existing SQL migration files already run prior to executing migrations. Unused for JS migrations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"newline"})})," (",(0,i.jsx)(n.code,{children:"string"}),"): Force line ending on file when generating checksum. Value should be either CRLF (windows) or LF (unix/mac)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"currentSchema"})})," (",(0,i.jsx)(n.code,{children:"string"}),"): For Postgres and MS SQL Server(will ignore for another DBs). Specifies schema to look to when validating ",(0,i.jsx)(n.code,{children:"versions"})," table columns. For Postgres, run ",(0,i.jsx)(n.code,{children:"SET search_path = currentSchema"})," prior to running queries against db."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"authorization",children:(0,i.jsx)(n.code,{children:"authorization"})}),"\n",(0,i.jsx)(n.p,{children:"An optional object with the following settings:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"adminSecret"})," (",(0,i.jsx)(n.code,{children:"string"}),"): A secret that should be sent in an\n",(0,i.jsx)(n.code,{children:"x-platformatic-admin-secret"})," HTTP header when performing GraphQL/REST API\ncalls. Use an ",(0,i.jsx)(n.a,{href:"#environment-variable-placeholders",children:"environment variable placeholder"}),"\nto securely provide the value for this setting."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"roleKey"})," (",(0,i.jsx)(n.code,{children:"string"}),", default: ",(0,i.jsx)(n.code,{children:"X-PLATFORMATIC-ROLE"}),"): The name of the key in user metadata that is used to store the user's roles. See ",(0,i.jsx)(n.a,{href:"/docs/db/authorization/user-roles-metadata#role-configuration",children:"Role configuration"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rolePath"})," (",(0,i.jsx)(n.code,{children:"string"}),"): The name of the dot-separated path in user\nmetadata that is used to store the user's roles. See ",(0,i.jsx)(n.a,{href:"/docs/db/authorization/user-roles-metadata#role-configuration",children:"Role configuration"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"anonymousRole"})," (",(0,i.jsx)(n.code,{children:"string"}),", default: ",(0,i.jsx)(n.code,{children:"anonymous"}),"): The name of the anonymous role. See ",(0,i.jsx)(n.a,{href:"/docs/db/authorization/user-roles-metadata#role-configuration",children:"Role configuration"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jwt"})," (",(0,i.jsx)(n.code,{children:"object"}),"): Configuration for the ",(0,i.jsx)(n.a,{href:"/docs/db/authorization/strategies#json-web-token-jwt",children:"JWT authorization strategy"}),".\nAny option accepted by ",(0,i.jsx)(n.a,{href:"https://github.com/fastify/fastify-jwt",children:(0,i.jsx)(n.code,{children:"@fastify/jwt"})}),"\ncan be passed in this object.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secret"})," (required, ",(0,i.jsx)(n.code,{children:"string"})," or ",(0,i.jsx)(n.code,{children:"object"}),"): The secret key that the JWT was signed with.\nSee the ",(0,i.jsxs)(n.a,{href:"https://github.com/fastify/fastify-jwt#secret-required",children:[(0,i.jsx)(n.code,{children:"@fastify/jwt"})," documentation"]}),"\nfor accepted string and object values. Use an ",(0,i.jsx)(n.a,{href:"#environment-variable-placeholders",children:"environment variable placeholder"}),"\nto securely provide the value for this setting."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"jwks"})," (",(0,i.jsx)(n.code,{children:"boolean"})," or ",(0,i.jsx)(n.code,{children:"object"}),"): Configure authorization with JSON Web Key Sets (JWKS). See the ",(0,i.jsx)(n.a,{href:"/docs/db/authorization/strategies#json-web-key-sets-jwks",children:"JWKS documentation"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"namespace"})," (",(0,i.jsx)(n.code,{children:"string"}),"): Configure a ",(0,i.jsx)(n.a,{href:"/docs/db/authorization/strategies#jwt-custom-claim-namespace",children:"JWT Custom Claim Namespace"})," to\nto avoid name collisions."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"webhook"})," (",(0,i.jsx)(n.code,{children:"object"}),"): Configuration for the ",(0,i.jsx)(n.a,{href:"/docs/db/authorization/strategies#webhook",children:"Webhook authorization strategy"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"url"})," (required, ",(0,i.jsx)(n.code,{children:"string"}),"): Webhook URL that Platformatic DB will make a\nPOST request to."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"rules"})," (",(0,i.jsx)(n.code,{children:"array"}),"): Authorization rules that describe the CRUD actions that\nusers are allowed to perform against entities. See ",(0,i.jsx)(n.a,{href:"/docs/db/authorization/rules",children:"Rules"}),"\ndocumentation."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["If an ",(0,i.jsx)(n.code,{children:"authorization"})," object is present, but no rules are specified, no CRUD\noperations are allowed unless ",(0,i.jsx)(n.code,{children:"adminSecret"})," is passed."]})}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="platformatic.db.json"',children:'{\n  "authorization": {\n    "jwt": {\n      "secret": "{PLT_AUTHORIZATION_JWT_SECRET}"\n    },\n    "rules": [\n       ...\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"setting-and-using-env-placeholders",children:"Setting and Using ENV placeholders"}),"\n",(0,i.jsxs)(n.p,{children:["Environment variable placeholders are used to securely inject runtime configurations. Learn how to ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#setting-environment-variables",children:"set"})," and ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#environment-variable-placeholders",children:"use"})," environment variable placeholders ",(0,i.jsx)(n.a,{href:"/docs/service/configuration",children:"documentation"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"plt_root",children:"PLT_ROOT"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"/docs/service/configuration#plt_root",children:"PLT_ROOT"})," variable is used to configure relative path and is set to the directory containing the Service configuration file."]}),"\n",(0,i.jsx)(n.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,i.jsx)(n.p,{children:"The example below is a basic setup for Platformatic DB using a local SQLite database. It includes support for OpenAPI, GraphQL, and the GraphiQL interface."}),"\n",(0,i.jsxs)(n.p,{children:["The server is configured to listen on ",(0,i.jsx)(n.code,{children:"http://127.0.0.1:3042"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "server": {\n    "hostname": "127.0.0.1",\n    "port": "3042"\n  },\n  "db": {\n    "connectionString": "sqlite://./db.sqlite",\n    "graphiql": true,\n    "openapi": true,\n    "graphql": true\n  }\n}\n'})}),"\n",(0,i.jsx)(t.default,{})]})}function j(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},7130:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var i=s(4848),r=s(8453);const t={},o=void 0,c={id:"getting-started/issues",title:"issues",description:"Issues",source:"@site/versioned_docs/version-1.53.3/getting-started/issues.md",sourceDirName:"getting-started",slug:"/getting-started/issues",permalink:"/docs/getting-started/issues",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/oss/edit/main/versioned_docs/version-1.53.3/getting-started/issues.md",tags:[],version:"1.53.3",frontMatter:{}},a={},l=[{value:"Issues",id:"issues",level:2}];function d(e){const n={a:"a",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"issues",children:"Issues"}),"\n",(0,i.jsxs)(n.p,{children:["If you run into a bug or have a suggestion for improvement, please raise an\n",(0,i.jsx)(n.a,{href:"https://github.com/platformatic/platformatic/issues/new",children:"issue on GitHub"})," or join our ",(0,i.jsx)(n.a,{href:"https://discord.gg/platformatic",children:"Discord feedback"})," channel."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);