"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[19,6667],{4836:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var s=i(4848),r=i(8453);const n={},a=void 0,o={id:"getting-started/issues",title:"issues",description:"Issues",source:"@site/docs/getting-started/issues.md",sourceDirName:"getting-started",slug:"/getting-started/issues",permalink:"/docs/next/getting-started/issues",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/platformatic/edit/main/docs/getting-started/issues.md",tags:[],version:"current",frontMatter:{}},c={},l=[{value:"Issues",id:"issues",level:2}];function d(e){const t={a:"a",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"issues",children:"Issues"}),"\n",(0,s.jsxs)(t.p,{children:["If you run into a bug or have a suggestion for improvement, please raise an\n",(0,s.jsx)(t.a,{href:"https://github.com/platformatic/platformatic/issues/new",children:"issue on GitHub"})," or join our ",(0,s.jsx)(t.a,{href:"https://discord.gg/platformatic",children:"Discord feedback"})," channel."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8506:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var s=i(4848),r=i(8453),n=i(4836);const a={title:"Overview",label:"Platformatic Service"},o="Platformatic Service",c={id:"service/overview",title:"Overview",description:"Platformatic Service is an HTTP server that provides a developer tools for",source:"@site/docs/service/overview.md",sourceDirName:"service",slug:"/service/overview",permalink:"/docs/next/service/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/platformatic/edit/main/docs/service/overview.md",tags:[],version:"current",frontMatter:{title:"Overview",label:"Platformatic Service"},sidebar:"docs",previous:{title:"Programmatic API",permalink:"/docs/next/runtime/programmatic"},next:{title:"Configuration",permalink:"/docs/next/service/configuration"}},l={},d=[{value:"Features",id:"features",level:2},{value:"Issues",id:"issues",level:2},{value:"Standalone usage",id:"standalone-usage",level:2},{value:"TypeScript",id:"typescript",level:2},...n.toc];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"platformatic-service",children:"Platformatic Service"})}),"\n",(0,s.jsx)(t.p,{children:"Platformatic Service is an HTTP server that provides a developer tools for\nbuilding robust APIs with Node.js."}),"\n",(0,s.jsxs)(t.p,{children:["For a high level overview of how Platformatic Service works, please reference the\n",(0,s.jsx)(t.a,{href:"/docs/next/Overview",children:"Overview"})," guide."]}),"\n",(0,s.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Command-line interface: ",(0,s.jsx)(t.a,{href:"/docs/next/cli",children:(0,s.jsx)(t.code,{children:"platformatic service"})})]}),"\n",(0,s.jsxs)(t.li,{children:["Add custom functionality in a ",(0,s.jsx)(t.a,{href:"/docs/next/service/plugin",children:"Fastify plugin"})]}),"\n",(0,s.jsxs)(t.li,{children:["Write plugins in JavaScript or ",(0,s.jsx)(t.a,{href:"/docs/next/cli#compile",children:"TypeScript"})]}),"\n",(0,s.jsxs)(t.li,{children:["Start Platformatic Service ",(0,s.jsx)(t.a,{href:"/docs/next/service/programmatic",children:"programmatically"})," in tests or other applications"]}),"\n",(0,s.jsx)(t.li,{children:"Fully typed"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"issues",children:"Issues"}),"\n",(0,s.jsxs)(t.p,{children:["If you run into a bug or have a suggestion for improvement, please\n",(0,s.jsx)(t.a,{href:"https://github.com/platformatic/platformatic/issues/new",children:"raise an issue on GitHub"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"standalone-usage",children:"Standalone usage"}),"\n",(0,s.jsxs)(t.p,{children:["If you're only interested in the features available in Platformatic Service, you can simply switch ",(0,s.jsx)(t.code,{children:"platformatic"})," with ",(0,s.jsx)(t.code,{children:"@platformatic/service"})," in the ",(0,s.jsx)(t.code,{children:"dependencies"})," of your ",(0,s.jsx)(t.code,{children:"package.json"}),", so that you'll only import fewer deps."]}),"\n",(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"plt-service"})," command, it's the equivalent of ",(0,s.jsx)(t.code,{children:"plt service"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,s.jsxs)(t.p,{children:["To generate the types for the application, run ",(0,s.jsx)(t.code,{children:"platformatic db types"}),"."]}),"\n",(0,s.jsx)(n.default,{})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var s=i(6540);const r={},n=s.createContext(r);function a(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);