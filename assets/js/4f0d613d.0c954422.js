"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[2383],{2771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(4848),i=n(8453);const a={title:"Overview",label:"sql-events"},r="Platformatic DB sql-events module",o={id:"packages/sql-events/overview",title:"Overview",description:"The Platformatic DB sql-events uses mqemitter to publish events when entities are saved and deleted.",source:"@site/docs/packages/sql-events/overview.md",sourceDirName:"packages/sql-events",slug:"/packages/sql-events/overview",permalink:"/docs/next/packages/sql-events/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/platformatic/edit/main/docs/packages/sql-events/overview.md",tags:[],version:"current",frontMatter:{title:"Overview",label:"sql-events"},sidebar:"docs",previous:{title:"Transactions",permalink:"/docs/next/packages/sql-mapper/entities/transactions"},next:{title:"Fastify Plugin",permalink:"/docs/next/packages/sql-events/fastify-plugin"}},c={},l=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"API",id:"api",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"platformatic-db-sql-events-module",children:"Platformatic DB sql-events module"})}),"\n",(0,s.jsxs)(t.p,{children:["The Platformatic DB sql-events uses ",(0,s.jsx)(t.a,{href:"http://npm.im/mqemitter",children:"mqemitter"})," to publish events when ",(0,s.jsx)(t.a,{href:"/reference/sql-mapper/entities/introduction.md",children:"entities"})," are saved and deleted."]}),"\n",(0,s.jsx)(t.p,{children:"These events are useful to distribute updates to clients, e.g. via WebSocket, Server-Sent Events, or GraphQL Subscritions.\nWhen subscribing and using a multi-process system with a broker like Redis, a subscribed topic will receive the data from all\nthe other processes."}),"\n",(0,s.jsxs)(t.p,{children:["They are not the right choice for executing some code whenever an entity is created, modified or deleted, in that case\nuse ",(0,s.jsx)(t.a,{href:"/reference/sql-mapper/entities/hooks.md",children:"@platformatic/sql-mapper hooks"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"install",children:"Install"}),"\n",(0,s.jsxs)(t.p,{children:["You can use together with ",(0,s.jsx)(t.code,{children:"@platformatic/sql-mapper"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"npm i @platformatic/sql-mapper @platformatic/sql-events\n"})}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"const { connect } = require('@platformatic/sql-mapper')\nconst { setupEmitter } = require('@platformatic/sql-events')\nconst { pino } = require('pino')\n\nconst log = pino()\n\nasync function onDatabaseLoad (db, sql) {\n  await db.query(sql`CREATE TABLE pages (\n    id SERIAL PRIMARY KEY,\n    title VARCHAR(255) NOT NULL\n  );`)\n}\nconst connectionString = 'postgres://postgres:postgres@localhost:5432/postgres'\nconst mapper = await connect({\n  connectionString,\n  log,\n  onDatabaseLoad,\n  ignore: {},\n  hooks: {\n    Page: {\n      find: async function(_find, opts) {\n        console.log('hook called');\n        return await _find(opts)\n      }\n    }\n  }\n})\n\nsetupEmitter({ mapper, log })\n\nconst pageEntity = mapper.entities.page\n\nconst queue = await mapper.subscribe([\n  pageEntity.getSubscriptionTopic({ action: 'save' }),\n  pageEntity.getSubscriptionTopic({ action: 'delete' })\n])\n\nconst page = await pageEntity.save({\n  input: { title: 'fourth page' }\n})\n\nconst page2 = await pageEntity.save({\n  input: {\n    id: page.id,\n    title: 'fifth page'\n  }\n})\n\nawait pageEntity.delete({\n  where: {\n    id: {\n      eq: page.id\n    }\n  },\n  fields: ['id', 'title']\n})\n\nfor await (const ev of queue) {\n  console.log(ev)\n  if (expected.length === 0) {\n    break\n  }\n}\n\nprocess.exit(0)\n"})}),"\n",(0,s.jsx)(t.h3,{id:"api",children:"API"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"setupEmitter"})," function has the following options:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"mq"})," - an instance of ",(0,s.jsx)(t.a,{href:"https://npm.im/mqemitter",children:(0,s.jsx)(t.code,{children:"mqemitter"})}),", optional."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"setupEmitter"})," functions adds the following properties to the ",(0,s.jsx)(t.code,{children:"mapper"})," object:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"mq"})," \u2014 an instance of ",(0,s.jsx)(t.a,{href:"https://npm.im/mqemitter",children:(0,s.jsx)(t.code,{children:"mqemitter"})})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"subscribe(topics)"})," \u2014 a method to create a node ",(0,s.jsx)(t.a,{href:"https://nodejs.org/api/stream.html#new-streamreadableoptions",children:(0,s.jsx)(t.code,{children:"Readable"})}),"\nthat will contain the events emitted by those topics."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Each entity of ",(0,s.jsx)(t.code,{children:"app.platformatic.entities"})," will be augmented with two functions:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"entity.getPublishTopic({ ctx, data, action })"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"entity.getSubscriptionTopic({ ctx, action })"})}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Where ",(0,s.jsx)(t.code,{children:"ctx"})," is the GraphQL Context, ",(0,s.jsx)(t.code,{children:"data"})," is the object that will be emitted and ",(0,s.jsx)(t.code,{children:"action"})," is either ",(0,s.jsx)(t.code,{children:"save"})," or ",(0,s.jsx)(t.code,{children:"delete"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);