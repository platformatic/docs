"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[6046],{6989:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=t(4848),o=t(8453);const s={},a="Securing Platformatic DB with Authorization",r={id:"guides/securing-platformatic-db",title:"Securing Platformatic DB with Authorization",description:"Introduction",source:"@site/versioned_docs/version-1.53.3/guides/securing-platformatic-db.md",sourceDirName:"guides",slug:"/guides/securing-platformatic-db",permalink:"/docs/guides/securing-platformatic-db",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/oss/edit/main/versioned_docs/version-1.53.3/guides/securing-platformatic-db.md",tags:[],version:"1.53.3",frontMatter:{},sidebar:"Learn",previous:{title:"Extend REST API",permalink:"/docs/guides/add-custom-functionality/extend-rest"},next:{title:"Configure JWT with Auth0",permalink:"/docs/guides/jwt-auth0"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Block access to all entities, allow admins",id:"block-access-to-all-entities-allow-admins",level:2},{value:"Authorization rules",id:"authorization-rules",level:2},{value:"Read-only access to <em>anonymous</em> users",id:"read-only-access-to-anonymous-users",level:2},{value:"Work in Progress",id:"work-in-progress",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"securing-platformatic-db-with-authorization",children:"Securing Platformatic DB with Authorization"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["Authorization in Platformatic DB is ",(0,i.jsx)(n.strong,{children:"role-based"}),". User authentication and the\nassignment of roles must be handled by an external authentication service.\nTake a look to at the reference documentation for ",(0,i.jsx)(n.a,{href:"/docs/reference/db/authorization/introduction",children:"Authorization"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The goal of this simple guide is to protect an API built with Platformatic DB\nwith the use of a shared secret, that we call ",(0,i.jsx)(n.code,{children:"adminSecret"}),". We want to prevent\nany user that is not an admin to access the data."]}),"\n",(0,i.jsxs)(n.p,{children:["The use of an ",(0,i.jsx)(n.code,{children:"adminSecret"})," is a simplistic way of securing a system.\nIt is a crude way for limiting access and not suitable for production systems,\nas the risk of leaking the secret is high in case of a security breach.\nA production friendly way would be to issue a machine-to-machine JSON Web Token,\nideally with an asymmetric key. Alternatively, you can defer to an external\nservice via a Web Hook."]}),"\n",(0,i.jsxs)(n.p,{children:["Please refer to our guide to set up ",(0,i.jsx)(n.a,{href:"/docs/guides/jwt-auth0",children:"Auth0"})," for more information\non JSON Web Tokens."]}),"\n",(0,i.jsx)(n.h2,{id:"block-access-to-all-entities-allow-admins",children:"Block access to all entities, allow admins"}),"\n",(0,i.jsxs)(n.p,{children:["The following configuration will block all ",(0,i.jsx)(n.em,{children:"anonymous"})," users (e.g. each user without a known role)\nto access every entity:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  ...\n  "authorization": {\n    "adminSecret": "replaceWithSomethingRandomAndSecure"\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The data will still be available if the ",(0,i.jsx)(n.code,{children:"X-PLATFORMATIC-ADMIN-SECRET"})," HTTP header\nis specified when making HTTP calls, like so:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -H 'X-PLATFORMATIC-ADMIN-SECRET: replaceWithSomethingRandomAndSecure' http://127.0.0.1:3042/pages\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Configuring JWT or Web Hooks will have the same result of configuring an admin secret."})}),"\n",(0,i.jsx)(n.h2,{id:"authorization-rules",children:"Authorization rules"}),"\n",(0,i.jsxs)(n.p,{children:["Rules can be provided based on entity and role in order to restrict access and provide fine grained access.\nTo make an admin only query and save the ",(0,i.jsx)(n.code,{children:"page"})," table / ",(0,i.jsx)(n.code,{children:"page"})," entity using ",(0,i.jsx)(n.code,{children:"adminSecret"})," this structure should be used in the ",(0,i.jsx)(n.code,{children:"platformatic.db"})," configuration file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'  ...\n  "authorization": {\n    "adminSecret": "easy",\n    "rules": [{\n      "entity": "movie"\n      "role": "platformatic-admin",\n      "find": true,\n      "save": true,\n      "delete": false,\n      }\n    ]\n  }\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Note that the role of an admin user from ",(0,i.jsx)(n.code,{children:"adminSecret"})," strategy is ",(0,i.jsx)(n.code,{children:"platformatic-admin"})," by default."]})}),"\n",(0,i.jsxs)(n.h2,{id:"read-only-access-to-anonymous-users",children:["Read-only access to ",(0,i.jsx)(n.em,{children:"anonymous"})," users"]}),"\n",(0,i.jsxs)(n.p,{children:["The following configuration will allow all ",(0,i.jsx)(n.em,{children:"anonymous"})," users (e.g. each user without a known role)\nto access the ",(0,i.jsx)(n.code,{children:"pages"})," table / ",(0,i.jsx)(n.code,{children:"page"})," entity in Read-only mode:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  ...\n  "authorization": {\n    "adminSecret": "replaceWithSomethingRandomAndSecure"\n    "rules": [{\n      "role": "anonymous",\n      "entity": "page",\n      "find": true,\n      "save": false,\n      "delete": false\n    }]\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Note that we set ",(0,i.jsx)(n.code,{children:"find"})," as ",(0,i.jsx)(n.code,{children:"true"})," to allow the access, while the other options are ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"work-in-progress",children:"Work in Progress"}),"\n",(0,i.jsx)(n.p,{children:"This guide is a Work-In-Progress. Let us know what other common authorization use cases we should cover."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);