"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[2415],{8600:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var t=i(4848),s=i(8453);const r={},l="API",d={id:"packages/sql-mapper/entities/api",title:"API",description:"A set of operation methods are available on each entity:",source:"@site/docs/packages/sql-mapper/entities/api.md",sourceDirName:"packages/sql-mapper/entities",slug:"/packages/sql-mapper/entities/api",permalink:"/docs/next/packages/sql-mapper/entities/api",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/platformatic/edit/main/docs/packages/sql-mapper/entities/api.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Fields",permalink:"/docs/next/packages/sql-mapper/entities/fields"},next:{title:"Example",permalink:"/docs/next/packages/sql-mapper/entities/example"}},c={},o=[{value:"Returned fields",id:"returned-fields",level:2},{value:"Where clause",id:"where-clause",level:2},{value:"Handling Null Values",id:"handling-null-values",level:3},{value:"Examples",id:"examples",level:3},{value:"Selects row with <code>id = 1</code>",id:"selects-row-with-id--1",level:4},{value:"Select all rows with id less than 100",id:"select-all-rows-with-id-less-than-100",level:4},{value:"Select all rows with id 1, 3, 5 or 7",id:"select-all-rows-with-id-1-3-5-or-7",level:4},{value:"Select all rows with id 1 or 3",id:"select-all-rows-with-id-1-or-3",level:4},{value:"Select all rows with id 1 or 3 and title like &#39;foo%&#39;",id:"select-all-rows-with-id-1-or-3-and-title-like-foo",level:3},{value:"Select all rows where title is null",id:"select-all-rows-where-title-is-null",level:3},{value:"Select all rows where title is not null",id:"select-all-rows-where-title-is-not-null",level:3},{value:"Reference",id:"reference",level:2},{value:"<code>find</code>",id:"find",level:3},{value:"Options",id:"options",level:4},{value:"Usage",id:"usage",level:4},{value:"<code>count</code>",id:"count",level:3},{value:"Options",id:"options-1",level:4},{value:"Usage",id:"usage-1",level:4},{value:"<code>insert</code>",id:"insert",level:3},{value:"Options",id:"options-2",level:4},{value:"Usage",id:"usage-2",level:4},{value:"<code>save</code>",id:"save",level:3},{value:"Options",id:"options-3",level:4},{value:"Usage",id:"usage-3",level:4},{value:"<code>delete</code>",id:"delete",level:3},{value:"Options",id:"options-4",level:4},{value:"Usage",id:"usage-4",level:4},{value:"<code>updateMany</code>",id:"updatemany",level:3},{value:"Options",id:"options-5",level:4},{value:"Usage",id:"usage-5",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"api",children:"API"})}),"\n",(0,t.jsx)(n.p,{children:"A set of operation methods are available on each entity:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#find",children:(0,t.jsx)(n.code,{children:"find"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#count",children:(0,t.jsx)(n.code,{children:"count"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#insert",children:(0,t.jsx)(n.code,{children:"insert"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#save",children:(0,t.jsx)(n.code,{children:"save"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#delete",children:(0,t.jsx)(n.code,{children:"delete"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#updatemany",children:(0,t.jsx)(n.code,{children:"updateMany"})})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"returned-fields",children:"Returned fields"}),"\n",(0,t.jsxs)(n.p,{children:["The entity operation methods accept a ",(0,t.jsx)(n.code,{children:"fields"})," option that can specify an array of field names to be returned. If not specified, all fields will be returned."]}),"\n",(0,t.jsx)(n.h2,{id:"where-clause",children:"Where clause"}),"\n",(0,t.jsxs)(n.p,{children:["The entity operation methods accept a ",(0,t.jsx)(n.code,{children:"where"})," option to allow limiting of the database rows that will be affected by the operation."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"where"})," object's key is the field you want to check, the value is a key/value map where the key is an operator (see the table below) and the value is the value you want to run the operator against."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Platformatic operator"}),(0,t.jsx)(n.th,{children:"SQL operator"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"eq"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"\\'=\\'"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"in"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"\\'IN\\'"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"nin"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"\\'NOT IN\\'"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"neq"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"\\'<>\\'"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"gt"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"\\'>\\'"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"gte"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"'\\>='"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"lt"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"\\'<\\'"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"lte"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"\\'<=\\'"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"like"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"\\'LIKE\\'"})})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"handling-null-values",children:"Handling Null Values"}),"\n",(0,t.jsxs)(n.p,{children:["When using the ",(0,t.jsx)(n.code,{children:"eq"})," and ",(0,t.jsx)(n.code,{children:"neq"})," operators with a null value, the comparison logic adheres to standard SQL rules for null value handling."]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.h4,{id:"selects-row-with-id--1",children:["Selects row with ",(0,t.jsx)(n.code,{children:"id = 1"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n  ...\n  "where": {\n    id: {\n      eq: 1\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"select-all-rows-with-id-less-than-100",children:"Select all rows with id less than 100"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n  ...\n  "where": {\n    id: {\n      lt: 100\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"select-all-rows-with-id-1-3-5-or-7",children:"Select all rows with id 1, 3, 5 or 7"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n  ...\n  "where": {\n    id: {\n      in: [1, 3, 5, 7]\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Where clause operations are by default combined with the ",(0,t.jsx)(n.code,{children:"AND"})," operator. To combine them with the ",(0,t.jsx)(n.code,{children:"OR"})," operator, use the ",(0,t.jsx)(n.code,{children:"or"})," key."]}),"\n",(0,t.jsx)(n.h4,{id:"select-all-rows-with-id-1-or-3",children:"Select all rows with id 1 or 3"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n  ...\n  "where": {\n    or: [\n      {\n        id: {\n          eq: 1\n        }\n      },\n      {\n        id: {\n          eq: 3\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"select-all-rows-with-id-1-or-3-and-title-like-foo",children:"Select all rows with id 1 or 3 and title like 'foo%'"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"{\n  ...\n  \"where\": {\n    or: [\n      {\n        id: {\n          eq: 1\n        }\n      },\n      {\n        id: {\n          eq: 3\n        }\n      }\n    ],\n    title: {\n      like: 'foo%'\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"select-all-rows-where-title-is-null",children:"Select all rows where title is null"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n  ...\n  "where": {\n    title: {\n      eq: null\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"select-all-rows-where-title-is-not-null",children:"Select all rows where title is not null"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'{\n  ...\n  "where": {\n    title: {\n      neq: null\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,t.jsx)(n.h3,{id:"find",children:(0,t.jsx)(n.code,{children:"find"})}),"\n",(0,t.jsx)(n.p,{children:"Retrieve data for an entity from the database."}),"\n",(0,t.jsx)(n.h4,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fields"})}),(0,t.jsxs)(n.td,{children:["Array of ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"List of fields to be returned for each object"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"where"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"#where-clause",children:"Where clause \ud83d\udd17"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"orderBy"})}),(0,t.jsxs)(n.td,{children:["Array of ",(0,t.jsx)(n.code,{children:"Object"})]}),(0,t.jsxs)(n.td,{children:["Object like ",(0,t.jsx)(n.code,{children:"{ field: 'counter', direction: 'ASC' }"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"limit"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Number"})}),(0,t.jsx)(n.td,{children:"Limits the number of returned elements"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"offset"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Number"})}),(0,t.jsx)(n.td,{children:"The offset to start looking for rows from"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"'use strict'\n\nconst { connect } = require('@platformatic/sql-mapper')\nconst { pino } = require('pino')\nconst pretty = require('pino-pretty')\nconst logger = pino(pretty())\n\nasync function main() {\n  const pgConnectionString = 'postgres://postgres:postgres@127.0.0.1/postgres'\n  const mapper = await connect({\n    connectionString: pgConnectionString,\n    log: logger,\n  })\n  const res = await mapper.entities.page.find({\n    fields: ['id', 'title',],\n    where: {\n      id: {\n        lt: 10\n      }\n    },\n  })\n  logger.info(res)\n  await mapper.db.dispose()\n}\nmain()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"count",children:(0,t.jsx)(n.code,{children:"count"})}),"\n",(0,t.jsxs)(n.p,{children:["Same as ",(0,t.jsx)(n.code,{children:"find"}),", but only count entities."]}),"\n",(0,t.jsx)(n.h4,{id:"options-1",children:"Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"where"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"#where-clause",children:"Where clause \ud83d\udd17"})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"usage-1",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"'use strict'\n\nconst { connect } = require('@platformatic/sql-mapper')\nconst { pino } = require('pino')\nconst pretty = require('pino-pretty')\nconst logger = pino(pretty())\n\nasync function main() {\n  const pgConnectionString = 'postgres://postgres:postgres@127.0.0.1/postgres'\n  const mapper = await connect({\n    connectionString: pgConnectionString,\n    log: logger,\n  })\n  const res = await mapper.entities.page.count({\n    where: {\n      id: {\n        lt: 10\n      }\n    },\n  })\n  logger.info(res)\n  await mapper.db.dispose()\n}\nmain()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"insert",children:(0,t.jsx)(n.code,{children:"insert"})}),"\n",(0,t.jsx)(n.p,{children:"Insert one or more entity rows in the database."}),"\n",(0,t.jsx)(n.h4,{id:"options-2",children:"Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fields"})}),(0,t.jsxs)(n.td,{children:["Array of ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"List of fields to be returned for each object"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"inputs"})}),(0,t.jsxs)(n.td,{children:["Array of ",(0,t.jsx)(n.code,{children:"Object"})]}),(0,t.jsx)(n.td,{children:"Each object is a new row"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"usage-2",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"'use strict'\n\nconst { connect } = require('@platformatic/sql-mapper')\nconst { pino } = require('pino')\nconst pretty = require('pino-pretty')\nconst logger = pino(pretty())\n\nasync function main() {\n  const pgConnectionString = 'postgres://postgres:postgres@127.0.0.1/postgres'\n  const mapper = await connect({\n    connectionString: pgConnectionString,\n    log: logger,\n  })\n  const res = await mapper.entities.page.insert({\n    fields: ['id', 'title' ],\n      inputs: [\n        { title: 'Foobar' },\n        { title: 'FizzBuzz' }\n      ],\n  })\n  logger.info(res)\n  /**\n    0: {\n      \"id\": \"16\",\n      \"title\": \"Foobar\"\n    }\n    1: {\n      \"id\": \"17\",\n      \"title\": \"FizzBuzz\"\n    }\n  */\n  await mapper.db.dispose()\n}\nmain()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"save",children:(0,t.jsx)(n.code,{children:"save"})}),"\n",(0,t.jsx)(n.p,{children:"Create a new entity row in the database or update an existing one."}),"\n",(0,t.jsxs)(n.p,{children:["To update an existing entity, the ",(0,t.jsx)(n.code,{children:"id"})," field (or equivalent primary key) must be included in the ",(0,t.jsx)(n.code,{children:"input"})," object.\n",(0,t.jsx)(n.code,{children:"save"})," actually behaves as an ",(0,t.jsx)(n.code,{children:"upsert"}),", allowing both behaviours depending on the presence of the primary key field."]}),"\n",(0,t.jsx)(n.h4,{id:"options-3",children:"Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fields"})}),(0,t.jsxs)(n.td,{children:["Array of ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"List of fields to be returned for each object"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"input"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Object"})}),(0,t.jsx)(n.td,{children:"The single row to create/update"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"usage-3",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"'use strict'\nconst { connect } = require('@platformatic/sql-mapper')\nconst { pino } = require('pino')\nconst pretty = require('pino-pretty')\nconst logger = pino(pretty())\n\nasync function main() {\n  const connectionString = 'postgres://postgres:postgres@127.0.0.1/postgres'\n  const mapper = await connect({\n    connectionString: connectionString,\n    log: logger,\n  })\n  const res = await mapper.entities.page.save({\n    fields: ['id', 'title' ],\n      input: { id: 1, title: 'FizzBuzz' },\n  })\n  logger.info(res)\n  await mapper.db.dispose()\n}\nmain()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"delete",children:(0,t.jsx)(n.code,{children:"delete"})}),"\n",(0,t.jsxs)(n.p,{children:["Delete one or more entity rows from the database, depending on the ",(0,t.jsx)(n.code,{children:"where"})," option. Returns the data for all deleted objects."]}),"\n",(0,t.jsx)(n.h4,{id:"options-4",children:"Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fields"})}),(0,t.jsxs)(n.td,{children:["Array of ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"List of fields to be returned for each object"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"where"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"#where-clause",children:"Where clause \ud83d\udd17"})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"usage-4",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"'use strict'\nconst { connect } = require('@platformatic/sql-mapper')\nconst { pino } = require('pino')\nconst pretty = require('pino-pretty')\nconst logger = pino(pretty())\n\nasync function main() {\n  const connectionString = 'postgres://postgres:postgres@127.0.0.1/postgres'\n  const mapper = await connect({\n    connectionString: connectionString,\n    log: logger,\n  })\n  const res = await mapper.entities.page.delete({\n    fields: ['id', 'title',],\n    where: {\n      id: {\n        lt: 4\n      }\n    },\n  })\n  logger.info(res)\n  await mapper.db.dispose()\n}\nmain()\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"updatemany",children:(0,t.jsx)(n.code,{children:"updateMany"})}),"\n",(0,t.jsxs)(n.p,{children:["Update one or more entity rows from the database, depending on the ",(0,t.jsx)(n.code,{children:"where"})," option. Returns the data for all updated objects."]}),"\n",(0,t.jsx)(n.h4,{id:"options-5",children:"Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"where"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"#where-clause",children:"Where clause \ud83d\udd17"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"input"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Object"})}),(0,t.jsx)(n.td,{children:"The new values that want to update"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"fields"})}),(0,t.jsxs)(n.td,{children:["Array of ",(0,t.jsx)(n.code,{children:"string"})]}),(0,t.jsx)(n.td,{children:"List of fields to be returned for each object"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"usage-5",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"'use strict'\nconst { connect } = require('@platformatic/sql-mapper')\nconst { pino } = require('pino')\nconst pretty = require('pino-pretty')\nconst logger = pino(pretty())\n\nasync function main() {\n  const connectionString = 'postgres://postgres:postgres@127.0.0.1/postgres'\n  const mapper = await connect({\n    connectionString: connectionString,\n    log: logger,\n  })\n  const res = await mapper.entities.page.updateMany({\n    fields: ['id', 'title',],\n    where: {\n      counter: {\n        gte: 30\n      }\n    },\n    input: { \n      title: 'Updated title'\n    }\n  })\n  logger.info(res)\n  await mapper.db.dispose()\n}\nmain()\n\n"})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var t=i(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);