"use strict";(self.webpackChunkplatformatic_oss_website=self.webpackChunkplatformatic_oss_website||[]).push([[7097,6667],{2957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=n(4848),s=n(8453),r=n(4836);const o={},a="Logging",l={id:"db/logging",title:"Logging",description:"Platformatic DB uses a low overhead logger named Pino",source:"@site/docs/db/logging.md",sourceDirName:"db",slug:"/db/logging",permalink:"/docs/next/db/logging",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/platformatic/edit/main/docs/db/logging.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Plugin",permalink:"/docs/next/db/plugin"},next:{title:"Programmatic API",permalink:"/docs/next/db/programmatic"}},d={},c=[{value:"Logger output level",id:"logger-output-level",level:2},{value:"Log formatting",id:"log-formatting",level:2},{value:"Query Logging",id:"query-logging",level:2},...r.toc];function g(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"logging",children:"Logging"})}),"\n",(0,i.jsxs)(t.p,{children:["Platformatic DB uses a low overhead logger named ",(0,i.jsx)(t.a,{href:"https://github.com/pinojs/pino",children:"Pino"}),"\nto output structured log messages, which are efficient and easy to parse both programmatically and visually."]}),"\n",(0,i.jsx)(t.h2,{id:"logger-output-level",children:"Logger output level"}),"\n",(0,i.jsxs)(t.p,{children:["The default logging level is set to ",(0,i.jsx)(t.code,{children:"info"}),". This means that all log messages from ",(0,i.jsx)(t.code,{children:"info"})," level and above (",(0,i.jsx)(t.code,{children:"warn"}),", ",(0,i.jsx)(t.code,{children:"error"}),", ",(0,i.jsx)(t.code,{children:"fatal"}),") will be displayed. To override the logger output, add a ",(0,i.jsx)(t.code,{children:"logger"})," object in the ",(0,i.jsx)(t.code,{children:"server"})," configuration settings:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",metastring:'title="platformatic.json"',children:'{\n  "server": {\n    "logger": {\n      "level": "error"\n    },\n   ...\n  },\n  ...\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["For a full list of log levels and their meanings, see the ",(0,i.jsx)(t.a,{href:"https://github.com/pinojs/pino/blob/main/docs/api.md#level-string",children:"Pino documentation"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"log-formatting",children:"Log formatting"}),"\n",(0,i.jsxs)(t.p,{children:["Logs are automatically pretty-printed by ",(0,i.jsx)(t.a,{href:"https://github.com/pinojs/pino-pretty",children:"pino-pretty"})," to improve readability when running Platformatic DB in a terminal environment where standard out ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Standard_streams#Standard_output_(stdout)",children:"stdout"})," supports ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Tty_(Unix)",children:"TTY"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'$ npx platformatic db start\n[11:20:33.466] INFO (337606): server listening\n  url: "http://127.0.0.1:3042"\n'})}),"\n",(0,i.jsx)(t.p,{children:"In non-TTY environments, such as when logs are redirected to a file or a log management system, logs are formatted as newline-delimited JSON for easier parsing:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'$ npx platformatic db start | head\n{"level":30,"time":1665566628973,"pid":338365,"hostname":"darkav2","url":"http://127.0.0.1:3042","msg":"server listening"}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"query-logging",children:"Query Logging"}),"\n",(0,i.jsxs)(t.p,{children:["Enable detailed query logging by setting the log level to ",(0,i.jsx)(t.code,{children:"trace"}),". This is especially useful during development for monitoring the queries executed against the database:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'[12:09:13.810] INFO (platformatic-db/9695): incoming request\n[12:09:13.819] TRACE (platformatic-db/9695): query\n  query: {\n    "text": "SELECT \\"id\\", \\"title\\"\\n FROM \\"movies\\"\\nLIMIT ?"\n  }\n[12:09:13.820] INFO (platformatic-db/9695): request completed\n  responseTime: 10.350167274475098\n'})}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["Note extensive logging, especially at the ",(0,i.jsx)(t.code,{children:"trace"})," level, can impact performance and should be used judiciously in production environments."]})}),"\n",(0,i.jsx)(r.default,{})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},4836:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=n(4848),s=n(8453);const r={},o=void 0,a={id:"getting-started/issues",title:"issues",description:"Issues",source:"@site/docs/getting-started/issues.md",sourceDirName:"getting-started",slug:"/getting-started/issues",permalink:"/docs/next/getting-started/issues",draft:!1,unlisted:!1,editUrl:"https://github.com/platformatic/platformatic/edit/main/docs/getting-started/issues.md",tags:[],version:"current",frontMatter:{}},l={},d=[{value:"Issues",id:"issues",level:2}];function c(e){const t={a:"a",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"issues",children:"Issues"}),"\n",(0,i.jsxs)(t.p,{children:["If you run into a bug or have a suggestion for improvement, please raise an\n",(0,i.jsx)(t.a,{href:"https://github.com/platformatic/platformatic/issues/new",children:"issue on GitHub"})," or join our ",(0,i.jsx)(t.a,{href:"https://discord.gg/platformatic",children:"Discord feedback"})," channel."]})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);